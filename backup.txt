Register_ dart Backup

import 'package:flutter/material.dart';
import 'package:thrifty/services/auth.dart';
import 'package:thrifty/shared/loading.dart';

class Register extends StatefulWidget {

  final Function toggleView;
  Register({this.toggleView});

  @override
  _RegisterState createState() => _RegisterState();
}

class _RegisterState extends State<Register> {

  final AuthService _auth = AuthService();
  final _formKey = GlobalKey<FormState>();
  bool loading = false;

  //Text Field State

  String email = '';
  String password ='';
  String error = '';


  @override
  Widget build(BuildContext context) {
    return loading ? Loading() : Scaffold(
        backgroundColor: Colors.brown[100],
        appBar: AppBar(
            backgroundColor: Colors.brown[400],
            elevation: 0.0,
            title: Text('Register'),
          actions: <Widget>[
              FlatButton.icon(
                onPressed: (){
                  widget.toggleView();
                },
                icon: Icon(Icons.people),
                label: Text('Sign In'),
              )
            ],
        ),
        body: Container(
          padding: EdgeInsets.symmetric(vertical: 20.0,horizontal: 50.0),
          child: Form(
            key: _formKey,
            child: Column(
              children: <Widget>[
                SizedBox(height: 20.0),
                TextFormField(
                  validator: (val) => val.isEmpty ?  'Enter an Email': null,
                  onChanged: (val){
                    setState(() {
                      email= val;
                    });
                  },
                ),
                SizedBox(height: 20.0),
                TextFormField(
                  validator: (val) => val.length <6 ? 'Enter a password 6+ chars long ': null,
                  obscureText: true,
                  onChanged: (val) {
                    setState(() {
                      password = val;
                    });
                  },
                ),
                SizedBox(height: 20.0),
                RaisedButton(
                  color: Colors.pink[400],
                  child: Text(
                      'Register',
                      style: TextStyle(color: Colors.white)
                  ),
                  onPressed: () async{
                   if (_formKey.currentState.validate()){
                     setState(() {
                       loading = true;
                     });
                    dynamic result = await _auth.registerWithEmailAndPassword(email, password);
                    if (result == null){
                        setState(() {
                          error = "Please type a Valid Email";
                          loading = false;
                      });
                    }
                   }
                  },

                ),
                SizedBox(height: 12.0),
                Text(
                  error,
                  style: TextStyle(color: Colors.red, fontSize: 14.0),
                ),
              ],
            ),
          ),
        )
    );
  }
}



SignIn Dart Backup

import 'package:flutter/material.dart';
import 'package:thrifty/services/auth.dart';
import 'package:thrifty/shared/loading.dart';

class SignIn extends StatefulWidget {

  final Function toggleView;
  SignIn({this.toggleView});

  @override
  _SignInState createState() => _SignInState();
}

class _SignInState extends State<SignIn> {

  final AuthService _auth = AuthService();
  final _formKey = GlobalKey<FormState>();
  bool loading = false;

  //Text Field State

  String email = '';
  String password ='';
  String error = '';

  @override
  Widget build(BuildContext context) {
    return loading ? Loading() : Scaffold(
      backgroundColor: Colors.brown[100],
      appBar: AppBar(
        backgroundColor: Colors.brown[400],
        elevation: 0.0,
        title: Text('Sign In'),
          actions: <Widget>[
            FlatButton.icon(
                onPressed: (){
                  widget.toggleView();
                },
                icon: Icon(Icons.people),
                label: Text('Register'),
            )
        ],
      ),
      body: Container(
        padding: EdgeInsets.symmetric(vertical: 20.0,horizontal: 50.0),
        // child: RaisedButton(
        //   child: Text("Sign In Anon"),
        //   onPressed: () async{
        //     dynamic result = await _auth.signInAnon();
        //     if(result == null){
        //       print('Error Signing In');
        //     }else{
        //       print('Signed In');
        //       result(result.uid);
        //     }
        //   },
        // )
        child: Form(
          key: _formKey,
          child: Column(
            children: <Widget>[
              SizedBox(height: 20.0),
              TextFormField(
                validator: (val) => val.isEmpty ?  'Enter an Email': null,
                onChanged: (val){
                    setState(() {
                      email= val;
                    });
                },
              ),
              SizedBox(height: 20.0),
              TextFormField(
                validator: (val) => val.length <6 ? 'Enter a password 6+ chars long ': null,
                obscureText: true,
                onChanged: (val) {
                    setState(() {
                      password = val;
                    });
                },
              ),
              SizedBox(height: 20.0),
              RaisedButton(
                color: Colors.pink[400],
                child: Text(
                    'Sign In',
                style: TextStyle(color: Colors.white)
                ),
                onPressed: () async{
                  if (_formKey.currentState.validate()){
                    setState(() {
                      loading = true;
                    });
                    dynamic result = await _auth.signInWithEmailAndPassword(email, password);
                    if (result == null){
                      setState(() {
                        error = "Couldn't sign in with those credentials";
                        loading = false;
                      });

                    }
                  }
                },

              ),
              SizedBox(height: 12.0),
              Text(
                error,
                style: TextStyle(color: Colors.red, fontSize: 14.0),
              ),
            ],
          ),
        ),
      )
    );
  }
}

